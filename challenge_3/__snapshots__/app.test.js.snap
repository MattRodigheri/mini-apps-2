// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <button
          onClick={[Function]}
          value="0"
        >
          0
        </button>,
        <button
          onClick={[Function]}
          value="1"
        >
          1
        </button>,
        <button
          onClick={[Function]}
          value="2"
        >
          2
        </button>,
        <button
          onClick={[Function]}
          value="3"
        >
          3
        </button>,
        <button
          onClick={[Function]}
          value="4"
        >
          4
        </button>,
        <button
          onClick={[Function]}
          value="5"
        >
          5
        </button>,
        <button
          onClick={[Function]}
          value="6"
        >
          6
        </button>,
        <button
          onClick={[Function]}
          value="7"
        >
          7
        </button>,
        <button
          onClick={[Function]}
          value="8"
        >
          8
        </button>,
        <button
          onClick={[Function]}
          value="9"
        >
          9
        </button>,
        <button
          onClick={[Function]}
          value="10"
        >
          10
        </button>,
        <ScoreBoard
          score={
            Object {
              "firstBowl": 0,
              "frame": 1,
              "frameHalf": 1,
              "score": 0,
              "secondBowl": 0,
              "spareBonus": 0,
              "strikeBonus": 0,
            }
          }
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "0",
          "onClick": [Function],
          "value": "0",
        },
        "ref": null,
        "rendered": "0",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "1",
          "onClick": [Function],
          "value": "1",
        },
        "ref": null,
        "rendered": "1",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "2",
          "onClick": [Function],
          "value": "2",
        },
        "ref": null,
        "rendered": "2",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "3",
          "onClick": [Function],
          "value": "3",
        },
        "ref": null,
        "rendered": "3",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "4",
          "onClick": [Function],
          "value": "4",
        },
        "ref": null,
        "rendered": "4",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "5",
          "onClick": [Function],
          "value": "5",
        },
        "ref": null,
        "rendered": "5",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "6",
          "onClick": [Function],
          "value": "6",
        },
        "ref": null,
        "rendered": "6",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "7",
          "onClick": [Function],
          "value": "7",
        },
        "ref": null,
        "rendered": "7",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "8",
          "onClick": [Function],
          "value": "8",
        },
        "ref": null,
        "rendered": "8",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "9",
          "onClick": [Function],
          "value": "9",
        },
        "ref": null,
        "rendered": "9",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "10",
          "onClick": [Function],
          "value": "10",
        },
        "ref": null,
        "rendered": "10",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "score": Object {
            "firstBowl": 0,
            "frame": 1,
            "frameHalf": 1,
            "score": 0,
            "secondBowl": 0,
            "spareBonus": 0,
            "strikeBonus": 0,
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <button
            onClick={[Function]}
            value="0"
          >
            0
          </button>,
          <button
            onClick={[Function]}
            value="1"
          >
            1
          </button>,
          <button
            onClick={[Function]}
            value="2"
          >
            2
          </button>,
          <button
            onClick={[Function]}
            value="3"
          >
            3
          </button>,
          <button
            onClick={[Function]}
            value="4"
          >
            4
          </button>,
          <button
            onClick={[Function]}
            value="5"
          >
            5
          </button>,
          <button
            onClick={[Function]}
            value="6"
          >
            6
          </button>,
          <button
            onClick={[Function]}
            value="7"
          >
            7
          </button>,
          <button
            onClick={[Function]}
            value="8"
          >
            8
          </button>,
          <button
            onClick={[Function]}
            value="9"
          >
            9
          </button>,
          <button
            onClick={[Function]}
            value="10"
          >
            10
          </button>,
          <ScoreBoard
            score={
              Object {
                "firstBowl": 0,
                "frame": 1,
                "frameHalf": 1,
                "score": 0,
                "secondBowl": 0,
                "spareBonus": 0,
                "strikeBonus": 0,
              }
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "0",
            "onClick": [Function],
            "value": "0",
          },
          "ref": null,
          "rendered": "0",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "1",
            "onClick": [Function],
            "value": "1",
          },
          "ref": null,
          "rendered": "1",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "2",
            "onClick": [Function],
            "value": "2",
          },
          "ref": null,
          "rendered": "2",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "3",
            "onClick": [Function],
            "value": "3",
          },
          "ref": null,
          "rendered": "3",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "4",
            "onClick": [Function],
            "value": "4",
          },
          "ref": null,
          "rendered": "4",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "5",
            "onClick": [Function],
            "value": "5",
          },
          "ref": null,
          "rendered": "5",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "6",
            "onClick": [Function],
            "value": "6",
          },
          "ref": null,
          "rendered": "6",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "7",
            "onClick": [Function],
            "value": "7",
          },
          "ref": null,
          "rendered": "7",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "8",
            "onClick": [Function],
            "value": "8",
          },
          "ref": null,
          "rendered": "8",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "9",
            "onClick": [Function],
            "value": "9",
          },
          "ref": null,
          "rendered": "9",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "10",
            "onClick": [Function],
            "value": "10",
          },
          "ref": null,
          "rendered": "10",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "score": Object {
              "firstBowl": 0,
              "frame": 1,
              "frameHalf": 1,
              "score": 0,
              "secondBowl": 0,
              "spareBonus": 0,
              "strikeBonus": 0,
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
